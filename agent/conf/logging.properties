# Properties file which configures the operation of the JDK 
# logging facility.

# The system will look for this config file, first using 
# a System property specified at startup: 
# 
# >java -Djava.util.logging.config.file=myLoggingConfigFilePath 
# 
# If this property is not specified, then the config file is 
# retrieved from its default location at: 
# 
# JDK_HOME/jre/lib/logging.properties

# The levels in descending order are:
# SEVERE (highest value)
# WARNING
# INFO
# CONFIG
# FINE
# FINER
# FINEST  (lowest value)
#
# In addition there is a level OFF that can be used to turn
# off logging, and a level ALL that can be used to enable
# logging of all messages.

# Global logging properties. 
# ------------------------------------------ 
# The set of handlers to be loaded upon startup. 
# Comma-separated list of class names. 
# (? LogManager docs say no comma here, but JDK example has comma.) 
handlers=java.util.logging.FileHandler,java.util.logging.ConsoleHandler

# Default global logging level. 
# Loggers and Handlers may override this level 
.level=INFO

# Log format
java.util.logging.SimpleFormatter.format='%1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS %4$s: %5$s%6$s%n'

# Loggers 
# ------------------------------------------ 
# Loggers are usually attached to packages. 
# Here, the level for each package is specified. 
# The global level is used by default, so levels 
# specified here simply act as an override.
vaultspeed.agent.main.level=INFO
vaultspeed.agent.utils.level=INFO
vaultspeed.agent.http.level=INFO
vaultspeed.agent.jdbc.level=INFO
vaultspeed.agent.tasks.level=INFO
vaultspeed.agent.remote.ssh.level=INFO

#org.apache.http.level=FINEST

# Handlers 
# -----------------------------------------

# --- ConsoleHandler --- 
# Override of global logging level 
java.util.logging.ConsoleHandler.level=ALL
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter

# --- FileHandler --- 
# Override of global logging level 
java.util.logging.FileHandler.level=ALL

# Naming style for the output file:
java.util.logging.FileHandler.pattern=/home/agent/log/vs-java-client-%g.log

# Limiting size of output file in bytes (1MB = 1024000):
java.util.logging.FileHandler.limit=10240000

# Number of output files to cycle through, by appending an 
# integer to the base file name: 
java.util.logging.FileHandler.count=10

# Style of output (Simple or XML): 
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter

vaultspeed.agent.handler=java.util.logging.FileHandler
#org.apache.http.wire=java.util.logging.FileHandler